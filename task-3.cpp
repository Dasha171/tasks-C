#include <iostream>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

int main() {
    int n;
    cin >> n;
    

    vector<pair<int, pair<int, int>>> operations;
    for (int i = 0; i < n; i++) {
        int t, a, p;
        cin >> t >> a >> p;
        operations.push_back({a, {t, p}});
    }
    

    sort(operations.begin(), operations.end());

    map<int, int> jacketCount;
    

    for (const auto& op : operations) {
        int day = op.first;
        int type = op.second.first;
        int number = op.second.second;
        
        if (type == 1) {
            
            jacketCount[number]++;
        } else if (type == 2) {
            
            jacketCount[number]--;
        } else if (type == 3) {

            cout << jacketCount[number] << endl;
        }
    }
    
    return 0;
}

// Лавка Всеволода ограничение по времени на тест: 2 s. ограничение по памяти на тест: 256 MB 
//   Мальчик Всеволод открыл свою лавку по продаже кожанных курток с черепами, 
//   дела пошли в гору, но в один момент застопорились. Теперь у него есть новая идея
//   по улучшению бизнеса. Для этого он сломал суть времени и научился путешествовать в
//   разные дни существования своей лавки. Будем считать, что у каждой куртки есть собственный 
//   номер, если куртки имеют одинаковый номер, то они из одинаковой линейки. Тогда куртки, 
//   которые продаются в лавке образуют набор чисел (не обязательно различных). 
//   Всеволод научился делать 3 действия со своей лавкой: 
//   1. Добавить куртку под номером х в продажу. 
//   2. Убрать куртку под номером из продажи. 
//   3. Узнать, сколько курток с номером х сейчас продаются. Теперь так как Всеволод 
//   научился путешествовать между разными днями, он может изменять свою лавкуув эти дни! 
//   То есть он может попасть в день і и выполнить какую-либо операцию в этот день с лавкой. 
//   Если он добавил или удалил куртку из продажи, то она будет
//   добавлена и удалена в последующие дни, то есть все изменения сохраняются. 
//   Заметьте, что Всеволод не любит когда что-то идет не по плану, поэтому все 
//   его операции являются корректными в любой момент. То есть если в лавке в нужный день 
//   нет соответствующей куртки, то убрать ее будет нельзя. Теперь у Всеволода есть блокнот
//   с записями того, как он путешествовал и что делал. Блокнот состоит из q записей действий, 
//   которые выполнял Всеволод, в порядке их применения (но не в порядке времени выполнения).
//   К сожалению, Всеволод забыл записать ответы на свои вопросы, поэтому сделать это придется вам! 
//   Заметьте, что у Всеволода была своя хронология событий, поэтому для записи і
//   изменения под номерами j > і не влияют на запись і. Входные данные Первая строка
//   входных данных содержит единственно целое число n (1 < n 100 000) - число записей в блокноте Всеволода. 
//   Следующие п строк содержат описания записей. В i-й из них содержится три целых числа
//   t a, и р, (1 t 3, 1 < a4, < 10") - тип запроса, день, в который отравился Всеволод, 
//   и число, определяющее номер куртки в записи, соответственно. Гарантируется, что каждый 
//   день побывал в записях не более одного раза, иными словами все а, различны. 
//   Выходные данные Для каждого вопроса третьего типа из блокнота выведите одно 
//   целое число - количество курток в нужный день в нужный момент времени после
//   выполнения всех операций из предыдущих записей. 
//   Примеры 
//   входные данные 9 1 5 52 1 1 52 1 3 1337 3 2 1337 2 4 52 3 6 52 2 8 1337 3 7 1337 3 9 1337 
//   выходные данные  - 0 1 1 0
