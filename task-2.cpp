#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

int main() {
    int n, k, q;
    cin >> n >> k >> q;

    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    int min_diff = INT_MAX;

    for (int min_val = 1; min_val <= 1000000; min_val++) {
        vector<int> temp = a;
        vector<int> removed;


        for (int match = 0; match < q; match++) {
            int min_strength = INT_MAX;
            int min_pos = -1;


            for (int i = 0; i <= (int)temp.size() - k; i++) {
                int window_min = INT_MAX;
                for (int j = i; j < i + k; j++) {
                    window_min = min(window_min, temp[j]);
                }
                if (window_min >= min_val && window_min < min_strength) {
                    min_strength = window_min;
                    min_pos = i;
                }
            }

            if (min_pos == -1) break;

            int window_min = INT_MAX;
            int remove_pos = -1;
            for (int j = min_pos; j < min_pos + k; j++) {
                if (temp[j] < window_min) {
                    window_min = temp[j];
                    remove_pos = j;
                }
            }

            removed.push_back(temp[remove_pos]);
            temp.erase(temp.begin() + remove_pos);
        }

        if (removed.size() == q) {
            int max_removed = *max_element(removed.begin(), removed.end());
            min_diff = min(min_diff, max_removed - min_val);
        }
    }

    cout << min_diff << endl;
    return 0;
} 


// 4ВАр4. Контрпики Егора ограничение по времени на тест. 2 s. ограничение по памяти на тест: 512 МВ
// Мальчик Егор до сих пор продолжает играть в «ТОТА». В ней есть п героев, пронумерованных от 1 до п, и каждый герой обладает силой а;, причем у некоторых героев бывает одинаковая сила.
// Каждые k героев, идущих подряд. Егор считает потенциальным контрпиком. Поэтому за один матч он может выбрать ровно k подряд идущих героев, выбрать среди них самого слабого героя (если таких несколько, то любого) и забанить его, после чего этот герой полностью пропадает из игры. Таким образом, после у матчей останется п — q героев.
// Пусть Х и У это максимальная и минимальная сила удалённого героя за все q дней. Егор хочет, чтобы разница X - У была как можно меньше: мол, его стратегия выглядела бы более надёжной и ровной. Помогите Егору найти оптимальное X - Y Входные данные
// Первая строка содержит три целых числа п, k, q (1 ≤ п ≤ 2000, 1 ≤ k ≤ n, 1 ≤ q ≤ n - k + 1) — количество героев, количество героев в контрпике и количество матчей.
// Вторая строка содержит и целых чисел 01, 02, ..., а, (1 ≤ a; ≤ 10") — силы героев.
// Выходные данные
// Выведите одно число — минимально возможное значение X - У, где Х равняется максимальной силе удаленного героя, а Y - минимальной.
// Примеры
// входные данные - 5 3 2 52 69 10 12
// выходные данные - 2

// входные данные
// 10 1 6
// 10 20 30 40 50 55 58 57 56 50

// выходные данные - 8 

// входные данные
// 8 2 3
// 2 3 1 2 2 3 5 6

// выходные данные - 0

// Примечание

// Рассмотрим первый тест, в нем одна из оптимальных стратегий следующая:
// ﻿﻿Егор выбирает [10, 20, 12], после чего массив становится [52, 69, 20, 12
// ﻿﻿Егор выбирает [69, 20, 12], после чего массив становится [52, 69, 20
// • В итоге удалили героев с силами 10 и 12, из-за чего ответ 12 - 10 = 2
